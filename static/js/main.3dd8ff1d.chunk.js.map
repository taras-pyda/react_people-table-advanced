{"version":3,"sources":["components/Header/Header.tsx","components/HomePage/HomePage.tsx","components/PesonName/PersonName.tsx","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","api/people.ts","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Header","className","to","HomePage","PersonName","person","name","born","sex","search","useLocation","personUrl","toLocaleLowerCase","replace","pathname","classNames","PersonRow","died","mother","father","motherName","fatherName","PeopleTable","people","getUpdatedPeople","useSearchParams","searchParams","appliedQuery","get","useState","query","setQuery","history","useNavigate","sortBy","sortOrder","selectedPersonUrl","useParams","slug","visiblePeople","filter","toLowerCase","includes","sort","firstPerson","secondPerson","localeCompare","applyQuery","useCallback","debounce","newQuery","set","trimLeft","delete","toString","sortHandler","e","value","currentTarget","textContent","type","placeholder","onChange","target","onClick","map","PeoplePage","setPeople","peopleArr","getParent","arr","key","find","currentPerson","useEffect","fetch","then","response","json","peopleFromServer","length","NotFoundPage","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3dd8ff1d.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const Header: React.FC = () => (\n  <header className=\"Header\">\n    <nav className=\"Header__Nav\">\n      <Link to=\"/\" className=\"Header__Link\">Home Page</Link>\n\n      <Link to=\"people\">People</Link>\n    </nav>\n  </header>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1>Home Page</h1>\n);\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\n// Types\nimport { Person } from '../../types/Person/Person';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonName: React.FC<Props> = ({ person }) => {\n  const { name, born, sex } = person;\n  const { search } = useLocation();\n  const personUrl = `${name.toLocaleLowerCase().replace(/ /g, '-')}-${born}`;\n\n  return (\n    <Link\n      to={{ pathname: personUrl, search }}\n      className={classNames('PersonName', { 'PersonName--female': sex !== 'm' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\n// Components\nimport { PersonName } from '../PesonName';\n// Types\nimport { Person } from '../../types/Person/Person';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  const {\n    sex,\n    born,\n    died,\n    mother,\n    father,\n  } = person;\n\n  return (\n    <>\n      <td className=\"PeopleTable__Item\">\n        <PersonName person={person} />\n      </td>\n      <td className=\"PeopleTable__Item\">{sex}</td>\n      <td className=\"PeopleTable__Item\">{born}</td>\n      <td className=\"PeopleTable__Item\">{died}</td>\n      <td className=\"PeopleTable__Item\">\n        {mother ? (\n          <PersonName person={mother} />\n        ) : (\n          person.motherName || 'Unknown'\n        )}\n      </td>\n      <td className=\"PeopleTable__Item\">\n        {father ? (\n          <PersonName person={father} />\n        ) : (\n          person.fatherName || 'Unknown'\n        )}\n      </td>\n    </>\n  );\n};\n","import React, {\n  ChangeEventHandler,\n  MouseEventHandler,\n  useCallback,\n  useState,\n} from 'react';\nimport { useParams, useSearchParams, useNavigate } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport classNames from 'classnames';\n// Components\nimport { PersonRow } from '../PersonRow/PersonRow';\n// Types\nimport { Person } from '../../types/Person/Person';\n\ntype Props = {\n  people: Person[];\n  getUpdatedPeople: (peopleArr: Person[]) => Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, getUpdatedPeople }) => {\n  const [searchParams] = useSearchParams();\n  const appliedQuery = searchParams.get('query') || '';\n  const [query, setQuery] = useState(appliedQuery);\n  const history = useNavigate();\n  const sortBy = searchParams.get('sortBy');\n  const sortOrder = searchParams.get('sortOrder');\n  const selectedPersonUrl = useParams().slug;\n  let visiblePeople = [...people];\n\n  if (appliedQuery) {\n    visiblePeople = visiblePeople.filter(({ name, motherName, fatherName }) => {\n      return name.toLowerCase().includes(appliedQuery)\n        || motherName?.toLowerCase().includes(appliedQuery)\n        || fatherName?.toLowerCase().includes(appliedQuery);\n    });\n\n    visiblePeople = getUpdatedPeople(visiblePeople);\n  }\n\n  if (sortBy) {\n    visiblePeople = visiblePeople.sort((firstPerson, secondPerson) => {\n      switch (sortBy) {\n        case 'name':\n        case 'sex':\n          return sortOrder === 'asc'\n            ? firstPerson[sortBy].localeCompare(secondPerson[sortBy])\n            : secondPerson[sortBy].localeCompare(firstPerson[sortBy]);\n\n        case 'born':\n        case 'died':\n          return sortOrder === 'asc'\n            ? +firstPerson[sortBy] - +secondPerson[sortBy]\n            : +secondPerson[sortBy] - +firstPerson[sortBy];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  const applyQuery = useCallback(\n    debounce((newQuery: string) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery.toLowerCase().trimLeft());\n      } else {\n        searchParams.delete('query');\n      }\n\n      history(`?${searchParams.toString()}`);\n    }, 500),\n    [],\n  );\n\n  const queryHandler: ChangeEventHandler<HTMLInputElement> = (e) => {\n    const { value } = e.target;\n\n    setQuery(value);\n    applyQuery(value);\n  };\n\n  const sortHandler: MouseEventHandler<HTMLTableHeaderCellElement> = (e) => {\n    const value = e.currentTarget.textContent?.toLowerCase().replace('*', '');\n\n    if (value) {\n      searchParams.set('sortBy', value);\n    }\n\n    if (sortOrder === 'asc') {\n      searchParams.set('sortOrder', 'desc');\n    } else {\n      searchParams.set('sortOrder', 'asc');\n    }\n\n    history(`?${searchParams.toString()}`);\n  };\n\n  return (\n    <>\n      <input\n        type=\"search\"\n        name=\"searsh\"\n        value={query || ''}\n        placeholder=\"Enter name\"\n        onChange={queryHandler}\n      />\n\n      <table className=\"PeopleTable\">\n        <thead>\n          <tr className=\"PeopleTable__Header\">\n            <th\n              className=\"PeopleTable__Title PeopleTable__Title--sort\"\n              onClick={sortHandler}\n            >\n              {sortBy === 'name' ? 'Name*' : 'Name'}\n            </th>\n\n            <th\n              className=\"PeopleTable__Title PeopleTable__Title--sort\"\n              onClick={sortHandler}\n            >\n              {sortBy === 'sex' ? 'Sex*' : 'Sex'}\n            </th>\n\n            <th\n              className=\"PeopleTable__Title PeopleTable__Title--sort\"\n              onClick={sortHandler}\n            >\n              {sortBy === 'born' ? 'Born*' : 'Born'}\n            </th>\n\n            <th\n              className=\"PeopleTable__Title PeopleTable__Title--sort\"\n              onClick={sortHandler}\n            >\n              {sortBy === 'died' ? 'Died*' : 'Died'}\n            </th>\n\n            <th className=\"PeopleTable__Title\">Mother</th>\n\n            <th className=\"PeopleTable__Title\">Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {visiblePeople.map(person => {\n            const personUrl = `${person.name.toLowerCase().replace(/ /g, '-')}-${person.born}`;\n\n            return (\n              <tr\n                key={person.name}\n                className={classNames(\n                  'PeopleTable__Person',\n                  { 'PeopleTable__Person--selected': personUrl === selectedPersonUrl },\n                )}\n              >\n                <PersonRow person={person} />\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n// Api requests\nimport { getPeople } from '../../api/people';\n// Components\nimport { PeopleTable } from '../PeopleTable';\n// Types\nimport { Person } from '../../types/Person/Person';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  const getUpdatedPeople = (peopleArr: Person[]) => {\n    const getParent = (\n      arr:Person[],\n      person: Person,\n      key: keyof Person,\n    ) => {\n      const parent = arr.find(currentPerson => currentPerson.name === person[key]);\n\n      return parent || null;\n    };\n\n    return peopleArr.map(person => {\n      return {\n        ...person,\n        father: getParent(peopleArr, person, 'fatherName'),\n        mother: getParent(peopleArr, person, 'motherName'),\n      };\n    });\n  };\n\n  useEffect(() => {\n    getPeople()\n      .then(peopleFromServer => setPeople(getUpdatedPeople(peopleFromServer)));\n  }, []);\n\n  return (\n    <>\n      <h1>People page</h1>\n\n      {people.length > 0 && <PeopleTable people={people} getUpdatedPeople={getUpdatedPeople} />}\n    </>\n  );\n};\n","export const getPeople = () => {\n  return fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n    .then(response => response.json());\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1>Page not found</h1>\n);\n","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\n\nimport './App.scss';\n// Components\nimport { Header } from './components/Header';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nconst App: React.FC = () => (\n  <>\n    <Header />\n\n    <section>\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate replace to=\"/\" />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </section>\n  </>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n// Components\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}